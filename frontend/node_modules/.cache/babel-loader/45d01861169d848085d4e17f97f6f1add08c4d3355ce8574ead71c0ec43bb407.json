{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst API = \"http://localhost:5000/api/transactions\";\nexport const fetchTransactions = createAsyncThunk(\"transactions/fetch\", async () => {\n  const res = await axios.get(API);\n  return res.data;\n});\nexport const addTransaction = createAsyncThunk(\"transactions/add\", async data => {\n  const res = await axios.post(API, data);\n  return res.data;\n});\nconst transactionSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    items: [],\n    status: \"idle\"\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTransactions.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = \"succeeded\";\n    }).addCase(addTransaction.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    });\n  }\n});\nexport default transactionSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API","fetchTransactions","res","get","data","addTransaction","post","transactionSlice","name","initialState","items","status","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","reducer"],"sources":["D:/mern-stack/expense/frontend/src/redux/transactionSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API = \"http://localhost:5000/api/transactions\";\r\n\r\nexport const fetchTransactions = createAsyncThunk(\"transactions/fetch\", async () => {\r\n  const res = await axios.get(API);\r\n  return res.data;\r\n});\r\n\r\nexport const addTransaction = createAsyncThunk(\"transactions/add\", async (data) => {\r\n  const res = await axios.post(API, data);\r\n  return res.data;\r\n});\r\n\r\nconst transactionSlice = createSlice({\r\n  name: \"transactions\",\r\n  initialState: { items: [], status: \"idle\" },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTransactions.fulfilled, (state, action) => {\r\n        state.items = action.payload;\r\n        state.status = \"succeeded\";\r\n      })\r\n      .addCase(addTransaction.fulfilled, (state, action) => {\r\n        state.items.push(action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default transactionSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG,wCAAwC;AAEpD,OAAO,MAAMC,iBAAiB,GAAGH,gBAAgB,CAAC,oBAAoB,EAAE,YAAY;EAClF,MAAMI,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,GAAG,CAAC;EAChC,OAAOE,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAAC,kBAAkB,EAAE,MAAOM,IAAI,IAAK;EACjF,MAAMF,GAAG,GAAG,MAAMH,KAAK,CAACO,IAAI,CAACN,GAAG,EAAEI,IAAI,CAAC;EACvC,OAAOF,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;AAEF,MAAMG,gBAAgB,GAAGV,WAAW,CAAC;EACnCW,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAO,CAAC;EAC3CC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,iBAAiB,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACN,MAAM,GAAG,WAAW;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACV,cAAc,CAACW,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACP,KAAK,CAACU,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,gBAAgB,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}