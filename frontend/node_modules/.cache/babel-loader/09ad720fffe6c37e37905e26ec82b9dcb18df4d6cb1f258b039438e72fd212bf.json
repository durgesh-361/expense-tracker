{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst API = \"http://localhost:5000/api/transactions\";\n\n// Fetch all transactions\nexport const fetchTransactions = createAsyncThunk(\"transactions/fetch\", async () => {\n  const res = await axios.get(API);\n  return res.data;\n});\n\n// Add a new transaction\nexport const addTransaction = createAsyncThunk(\"transactions/add\", async data => {\n  const res = await axios.post(API, data);\n  return res.data;\n});\n\n// Update a transaction\nexport const updateTransaction = createAsyncThunk(\"transactions/updateTransaction\", async transaction => {\n  const {\n    id,\n    ...data\n  } = transaction;\n  const res = await axios.put(`${API}/${id}`, data);\n  return res.data;\n});\n\n// Delete a transaction\nexport const deleteTransaction = createAsyncThunk(\"transactions/delete\", async id => {\n  await axios.delete(`${API}/${id}`);\n  return id;\n});\nconst transactionSlice = createSlice({\n  name: \"transactions\",\n  initialState: {\n    items: [],\n    status: \"idle\"\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTransactions.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchTransactions.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = \"succeeded\";\n    }).addCase(addTransaction.fulfilled, (state, action) => {\n      state.items.unshift(action.payload);\n    }).addCase(updateTransaction.fulfilled, (state, action) => {\n      const index = state.items.findIndex(t => t._id === action.payload._id);\n      if (index !== -1) state.items[index] = action.payload;\n    }).addCase(deleteTransaction.fulfilled, (state, action) => {\n      state.items = state.items.filter(t => t._id !== action.payload);\n    });\n  }\n});\nexport default transactionSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API","fetchTransactions","res","get","data","addTransaction","post","updateTransaction","transaction","id","put","deleteTransaction","delete","transactionSlice","name","initialState","items","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","unshift","index","findIndex","t","_id","filter","reducer"],"sources":["D:/mern-stack/expense/frontend/src/redux/transactionSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API = \"http://localhost:5000/api/transactions\";\r\n\r\n// Fetch all transactions\r\nexport const fetchTransactions = createAsyncThunk(\r\n  \"transactions/fetch\",\r\n  async () => {\r\n    const res = await axios.get(API);\r\n    return res.data;\r\n  }\r\n);\r\n\r\n// Add a new transaction\r\nexport const addTransaction = createAsyncThunk(\r\n  \"transactions/add\",\r\n  async (data) => {\r\n    const res = await axios.post(API, data);\r\n    return res.data;\r\n  }\r\n);\r\n\r\n// Update a transaction\r\nexport const updateTransaction = createAsyncThunk(\r\n  \"transactions/updateTransaction\",\r\n  async (transaction) => {\r\n    const { id, ...data } = transaction;\r\n    const res = await axios.put(`${API}/${id}`, data);\r\n    return res.data;\r\n  }\r\n);\r\n\r\n// Delete a transaction\r\nexport const deleteTransaction = createAsyncThunk(\r\n  \"transactions/delete\",\r\n  async (id) => {\r\n    await axios.delete(`${API}/${id}`);\r\n    return id;\r\n  }\r\n);\r\n\r\nconst transactionSlice = createSlice({\r\n  name: \"transactions\",\r\n  initialState: { items: [], status: \"idle\" },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTransactions.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchTransactions.fulfilled, (state, action) => {\r\n        state.items = action.payload;\r\n        state.status = \"succeeded\";\r\n      })\r\n      .addCase(addTransaction.fulfilled, (state, action) => {\r\n        state.items.unshift(action.payload);\r\n      })\r\n      .addCase(updateTransaction.fulfilled, (state, action) => {\r\n        const index = state.items.findIndex((t) => t._id === action.payload._id);\r\n        if (index !== -1) state.items[index] = action.payload;\r\n      })\r\n      .addCase(deleteTransaction.fulfilled, (state, action) => {\r\n        state.items = state.items.filter((t) => t._id !== action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default transactionSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}